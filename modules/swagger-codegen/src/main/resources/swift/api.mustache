{{#operations}}//
// {{classname}}.swift
// API Version {{appVersion}}
//

class {{classname}} {
{{#operation}}

    /**{{#summary}}
     {{{summary}}}{{/summary}}
     - {{httpMethod}}: {{path}}{{#notes}}
     - {{{notes}}}{{/notes}}{{#subresourceOperation}}
     - subresourceOperation: {{subresourceOperation}}{{/subresourceOperation}}
     {{#authMethods}}- {{#isOAuth}}OAuth{{/isOAuth}}{{/authMethods}}{{#responseHeaders}}
     - responseHeaders: {{responseHeaders}}{{/responseHeaders}}{{#externalDocs}}
     - externalDocs: {{externalDocs}}{{/externalDocs}}{{#hasParams}}{{#allParams}}
     - parameter: {{paramName}}: (type: {{#isFormParam}}form{{/isFormParam}}{{#isQueryParam}}query{{/isQueryParam}}{{#isPathParam}}path{{/isPathParam}}{{#isHeaderParam}}header{{/isHeaderParam}}{{#isBodyParam}}body{{/isBodyParam}}) {{description}}{{/allParams}}{{/hasParams}}
     - returns: NetworkResult<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}Void{{/returnType}}> {{description}}
     */
    static func {{operationId}}({{#hasParams}}{{#allParams}}{{paramName}}{{#secondaryParam}}{{paramName}}{{/secondaryParam}}: {{{dataType}}}{{^required}}?{{/required}}{{#hasMore}}, {{/hasMore}}{{/allParams}}, {{/hasParams}}success: ({{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}Void {{/returnType}}?) -> (), failure: (ErrorType) -> ()) {
        {{^pathParams}}let{{/pathParams}}{{#pathParams}}{{^secondaryParam}}var{{/secondaryParam}}{{/pathParams}} path = "{{path}}"{{#pathParams}}
	    path = path.stringByReplacingOccurrencesOfString("{{=<% %>=}}{<%paramName%>}<%={{ }}=%>", withString: "\({{paramName}})", options: .LiteralSearch, range: nil){{/pathParams}}
		
		APIHelper.genericCall({{#authMethods}}{{^isOAuth}}requiresOauth: false, headers: Network.Header.json, {{/isOAuth}}{{/authMethods}}path: path, body: body, success: success, failure: failure)
    }
{{/operation}}
}
{{/operations}}
